var documenterSearchIndex = {"docs":
[{"location":"#RungeKutta.jl","page":"Home","title":"RungeKutta.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Public-API","page":"Home","title":"Public API","text":"","category":"section"},{"location":"#Constructors","page":"Home","title":"Constructors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"solve\nsolve!\nRungeKuttaSolver\nExplicitRungeKuttaSolver\nImplicitRungeKuttaSolver\nRungeKuttaSolution","category":"page"},{"location":"#NSDEBase.solve","page":"Home","title":"NSDEBase.solve","text":"solve(problem::InitialValueProblem, solver::RungeKuttaSolver; save_stages::Bool = false) :: RungeKuttaSolution\n\nreturns the RungeKuttaSolution of an InitialValueProblem. save_stages flags when to save all stages into solution.k.\n\n\n\n\n\n","category":"function"},{"location":"#NSDEBase.solve!","page":"Home","title":"NSDEBase.solve!","text":"solve!(solution::RungeKuttaSolution, problem::InitialValueProblem, solver::RungeKuttaSolver)\n\nreturns the RungeKuttaSolution of an InitialValueProblem.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.RungeKuttaSolver","page":"Home","title":"RungeKutta.RungeKuttaSolver","text":"Abstract type of a solver based on a Runge-Kutta method. See ExplicitRungeKuttaSolver and ImplicitRungeKuttaSolver for specific instantiations.\n\n\n\n\n\n","category":"type"},{"location":"#RungeKutta.ExplicitRungeKuttaSolver","page":"Home","title":"RungeKutta.ExplicitRungeKuttaSolver","text":"ExplicitRungeKuttaSolver{tableau_T, stepsize_T, adaptive_T} <: RungeKuttaSolver\n\nreturns a constructor for an explicit RungeKuttaSolver.\n\n\n\nExplicitRungeKuttaSolver(tableau, h[, adaptive])\nERK(args...; kwargs...) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver with:\n\ntableau  :: ButcherTableau     : Butcher tableau.\nstepsize :: StepSize           : step-size.\nadaptive :: AdaptiveParameters : embedded method's parameters.\n\n\n\n\n\n","category":"type"},{"location":"#RungeKutta.ImplicitRungeKuttaSolver","page":"Home","title":"RungeKutta.ImplicitRungeKuttaSolver","text":"ImplicitRungeKuttaSolver{tableau_T, stepsize_T, newton_T, adaptive_T} <: RungeKuttaSolver\n\nreturns a constructor for an implicit RungeKuttaSolver.\n\n\n\nImplicitRungeKuttaSolver(tableau, h, newton[, adaptive])\nIRK(args...; kwargs...) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver with:\n\ntableau  :: ButcherTableau     : Butcher tableau.\nstepsize :: StepSize           : step-size.\nnewton   :: NewtonParameters   : simplified Newton's parameters\nadaptive :: AdaptiveParameters : embedded method's parameters.\n\n\n\n\n\n","category":"type"},{"location":"#RungeKutta.RungeKuttaSolution","page":"Home","title":"RungeKutta.RungeKuttaSolution","text":"RungeKuttaSolution{u_T, t_T, k_T} <: InitialValueSolution\n\nreturns a constructor for the numerical solution of an InitialValueProblem obtained with a RungeKuttaSolver.\n\n\n\nRungeKuttaSolution(u, t[, k])\n\nreturns a RungeKuttaSolution with:\n\nu : numerical solution.\nt : time grid.\nk : stages.\n\n\n\nRungeKuttaSolution(problem::InitialValueProblem, solver::RungeKuttaSolver; save_stages::Bool = false)\n\nreturns an initialised RungeKuttaSolution given an InitialValueProblem and a RungeKuttaSolver. save_stages flags when to save all stages into k.\n\n\n\n\n\n","category":"type"},{"location":"#Solvers","page":"Home","title":"Solvers","text":"","category":"section"},{"location":"#Explicit","page":"Home","title":"Explicit","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Euler\nMidpoint\nHeun2\nRalston2\nHeun3\nKutta3\nRalston3\nSSPRK3\nRK4\nRule38\nHeunEuler\nFehlberg45\nDormandPrince54\nVerner65","category":"page"},{"location":"#RungeKutta.Euler","page":"Home","title":"RungeKutta.Euler","text":"Euler(; h = 0.0) :: ExplicitRungeKuttaSolver\nExplicitEuler(args...; kwargs...) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 1st-order Euler method. ```\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Midpoint","page":"Home","title":"RungeKutta.Midpoint","text":"Midpoint(; h = 0.0) :: ExplicitRungeKuttaSolver\nExplicitMidpoint(args...; kwargs...) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 2nd-order midpoint method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Heun2","page":"Home","title":"RungeKutta.Heun2","text":"Heun2(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 2nd-order Heun method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Ralston2","page":"Home","title":"RungeKutta.Ralston2","text":"Ralston2(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 2nd-order Ralston method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Heun3","page":"Home","title":"RungeKutta.Heun3","text":"Heun3(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 3rd-order Heun method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Kutta3","page":"Home","title":"RungeKutta.Kutta3","text":"Kutta3(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 3rd-order Kutta method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Ralston3","page":"Home","title":"RungeKutta.Ralston3","text":"Ralston3(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 3rd-order Ralston method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.SSPRK3","page":"Home","title":"RungeKutta.SSPRK3","text":"SSPRK3(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 3rd-order Strong-Stability-Preserving Runge-Kutta method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.RK4","page":"Home","title":"RungeKutta.RK4","text":"RK4(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 4th-order Runge-Kutta method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Rule38","page":"Home","title":"RungeKutta.Rule38","text":"Rule38(; h = 0.0) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 4th-order 3/8-rule method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.HeunEuler","page":"Home","title":"RungeKutta.HeunEuler","text":"HeunEuler(; h = 0.0, δ = 0.0, ϵ = 1e-5, K = 100) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 2nd-order Heun-Euler method with 1st-order error estimate.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Fehlberg45","page":"Home","title":"RungeKutta.Fehlberg45","text":"Fehlberg45(; h = 0.0, δ = 0.0, ϵ = 1e-5, K = 100) :: ExplicitRungeKuttaSolver\nF45(args...; kwargs...) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 4th-order Fehlberg method with 5th-order error estimate.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.DormandPrince54","page":"Home","title":"RungeKutta.DormandPrince54","text":"DormandPrince54(; h = 0.0, δ = 0.0, ϵ = 1e-5, K = 100) :: ExplicitRungeKuttaSolver\nDP54(args...; kwargs...) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 5th-order Dormand-Prince method with 4th-order error estimate.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.Verner65","page":"Home","title":"RungeKutta.Verner65","text":"Verner65(; h = 0.0, δ = 0.0, ϵ = 1e-5, K = 100) :: ExplicitRungeKuttaSolver\nV65(args...; kwargs...) :: ExplicitRungeKuttaSolver\n\nreturns an ExplicitRungeKuttaSolver for the 6th-order Verner method with 5th-order error estimate.\n\n\n\n\n\n","category":"function"},{"location":"#Implicit","page":"Home","title":"Implicit","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"BackwardEuler\nImplicitMidpoint\nCrankNicolson\nSDIRK3\nGaussLegendre4\nGaussLegendre6\nLobattoIIIA4\nLobattoIIIB2\nLobattoIIIB4\nLobattoIIIC2\nLobattoIIIC4\nRadauIA3\nRadauIA5\nRadauIIA3\nRadauIIA5","category":"page"},{"location":"#RungeKutta.BackwardEuler","page":"Home","title":"RungeKutta.BackwardEuler","text":"BackwardEuler(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\nImplicitEuler(args...; kwargs...) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 1st-order backward Euler method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.ImplicitMidpoint","page":"Home","title":"RungeKutta.ImplicitMidpoint","text":"ImplicitMidpoint(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 2nd-order implicit midpoint method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.CrankNicolson","page":"Home","title":"RungeKutta.CrankNicolson","text":"CrankNicolson(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 2nd-order Crank-Nicolson method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.SDIRK3","page":"Home","title":"RungeKutta.SDIRK3","text":"SDIRK3(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 3rd-order SDIRK method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.GaussLegendre4","page":"Home","title":"RungeKutta.GaussLegendre4","text":"GaussLegendre4(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\nGL4(args...; kwargs...) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 4th-order Gauss-Legendre method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.GaussLegendre6","page":"Home","title":"RungeKutta.GaussLegendre6","text":"GaussLegendre6(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\nGL6(args...; kwargs...) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 6th-order Gauss–Legendre method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.LobattoIIIA4","page":"Home","title":"RungeKutta.LobattoIIIA4","text":"LobattoIIIA4(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 4th-order Lobatto IIIA method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.LobattoIIIB2","page":"Home","title":"RungeKutta.LobattoIIIB2","text":"LobattoIIIB2(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 2nd-order Lobatto IIIB method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.LobattoIIIB4","page":"Home","title":"RungeKutta.LobattoIIIB4","text":"LobattoIIIB4(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 4th-order Lobatto IIIB method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.LobattoIIIC2","page":"Home","title":"RungeKutta.LobattoIIIC2","text":"LobattoIIIC2(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 2nd-order Lobatto IIIC method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.LobattoIIIC4","page":"Home","title":"RungeKutta.LobattoIIIC4","text":"LobattoIIIC4(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 4th-order Lobatto IIIC method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.RadauIA3","page":"Home","title":"RungeKutta.RadauIA3","text":"RadauIA3(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 3rd-order Radau IA method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.RadauIA5","page":"Home","title":"RungeKutta.RadauIA5","text":"RadauIA5(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 5th-order Radau IA method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.RadauIIA3","page":"Home","title":"RungeKutta.RadauIIA3","text":"RadauIIA3(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 3rd-order Radau IIA method.\n\n\n\n\n\n","category":"function"},{"location":"#RungeKutta.RadauIIA5","page":"Home","title":"RungeKutta.RadauIIA5","text":"RadauIIA5(; h = 0.0, ϵ = 1e-3, K = 10) :: ImplicitRungeKuttaSolver\n\nreturns an ImplicitRungeKuttaSolver for the 5th-order Radau IIA method.\n\n\n\n\n\n","category":"function"},{"location":"#Utilities","page":"Home","title":"Utilities","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ButcherTableau\nℛ","category":"page"},{"location":"#RungeKutta.ButcherTableau","page":"Home","title":"RungeKutta.ButcherTableau","text":"ButcherTableau{A_T, b_T, c_T, s_T, p_T, d_T, q_T}\n\ndefines a constructor for the Butcher tableau of a RungeKuttaSolver.\n\n\n\nButcherTableau(A, b, c, s, p[, d, q])\n\nreturns a ButcherTableau with:\n\nA :: AbstractMatrix : matrix of coefficients.\nb :: AbstractVector : vector of weights.\nc :: AbstractVector : vector of nodes.\ns :: Integer : number of stages.\np :: Integer : order of accuracy.\nd :: AbstractVector : embedding's vector of weights.\nq :: Integer : embedding's order of accuracy.\n\n\n\nButcherTableau(tableau::AbstractMatrix)\n\nreturns a ButcherTableau from a matrix tableau with structure:\n\nbeginarraycc\n    c  A \n    hline\n    p  b \n    q  d\nendarray\n\n\n\n\n\n","category":"type"},{"location":"#RungeKutta.ℛ","page":"Home","title":"RungeKutta.ℛ","text":"ℛ(z::Number, solver::RungeKuttaSolver) :: Number\n\nreturns the stability function of a RungeKuttaSolver:\n\n    R(z) = fracdet(I - z(A - mathbb1b^intercal))det(I - zA)\n\n\n\nℛ(Z::AbstractMatrix, tableau::ButcherTableau) :: AbstractMatrix\n\n...\n\n\n\n\n\n","category":"function"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
